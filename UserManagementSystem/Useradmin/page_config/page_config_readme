Con 的 使用方法
一   数据配置方法
    #############################################################################################
    ###################   返回前端数据    ###################
    ret={
        'server_list':"数据列表 [{'id':'1','title':'xx1'},{'id':'2','title':'xx2'}]",
        'table_config':"数据库配置 list[{},{}]",
        'global_dict':{
                'abc':"全局数据，需要留在前端 [[1,'a'],[2,'b']]",
        }
        'search_config':"查找配置 list [{},{}]"
    }

    #######################################################
    ###################   数据库配置    ###################
    数据库配置：
    table_config=[
        {
        ##################### checkbox ########################
            'q': None,         # 数据查询字段
            'title': '选择',     # 显示标题
            'display': True,   # 是否显示
            'text': {           #显示内容
                'tpl': "<input type='checkbox' value='{n1}' />",               #显示内容
                'kwargs': {'n1': '@id'}                              #@id 代表在数据列表(server_list)中找到 id的值，@@ 代表在全局变量中找到对应的值 ，然后替换tpl中的n1值
            },
            'attrs':{'nid':'@id'}                     #在 标签里面增加 nid=@id 从数据列表中找

        },
        #################### 显示字段 ##########################
        {
            'q': 'device_status_id',
            'title': '状态',
            'display': True,
            'text': {
                'tpl': "{n1}",
                'kwargs': {'n1': '@@device_status_choices'}
            },
            'attrs':{'name':'device_status_id','edit-enable':'true','origin': '@device_status_id','edit-type':'select','global_key':'device_status_choices' }
        },  #name：数据库字段名，   edit-enable:是否可编辑   origin：初始值   edit-type：编辑用的方法
        global_key: 如果用select方法，需要global_key，来设置select的option标签。

        ####################也可以在页面中显示  增删改查 的功能####################
        {
            'q': None,
            'title': '操作',
            'display': True,
            'text': {
                'tpl': "<a href='/del?nid={nid}'>删除</a>",
                'kwargs': {'nid': '@id'}
            },
            'attrs':{'k1':'v1','k2':'@id'}
        },

    ]
    #####################################################
    ###################   查找配置    ###################
    search_config =  [
        {'name': 'cabinet_num', 'text': '机柜号', 'search_type': 'input'},
        {'name': 'device_type_id', 'text': '资产类型', 'search_type': 'select', 'global_name': 'device_type_choices'},
        {'name': 'device_status_id', 'text': '资产状态', 'search_type': 'select', 'global_name': 'device_status_choices'},
    ]

    ###  name： 数据库字段
    ###  text： 显示名称
    ###  search_type: 搜索框 标签  input or select
    ###  如果是select标签  则需要 global_name


    ##############################################################################################

二 后端 views 方法
    ##############################################################################################
    后端 通过GET 传输 数据 到前端
    前端 通过POST 传输数据 到后端 修改数据
    前端 通过DELETE 传输key 到后端 删除数据
    前端 通过PUT  传key   到后端  搜索数据
    """
    def asset(request):
        return render(request, 'asset.html')
    def asset_json(request):
        if request.method == 'DELETE':
            pass
        elif request.method == "PUT":
            pass
        elif request.method == "POST":
            pass
        elif request.method == 'GET':
            pass
    """
    ###########################################################
    backend.utils.con_tool.py
    get_data_list： 查找的方法，封装在函数里面  (request, model_cls, table_config)
            request ：请求
            model_cls：models.xxx
            table_config:数据库配置
    JsonCustomEncoder :
            json.dumps(ret, cls=JsonCustomEncoder)
            自定义 json 方法 让时间能够json
    ##############################################################################################

三  模板 templates 使用
    ##############################################################################################
   引用：
    <script src="/static/jquery-3.2.1.js"></script>
    <script src="/static/con_list.js"></script>
    <script>
    $.showTable('/backend/curd_ajax.html');
    </script>
    ###############################################
    con_search.html :  搜索框
    使用：		{% include 'con_search.html' %}

    con_button.html :  按钮
    有：全选    反选    取消    进入编辑模式     删除    刷新    保存   功能
    添加功能需要另外添加：1.利用模态框的方法输入数据 2. 跳转到新的页面的方法（不采用）
    使用         {% include 'con_button.html' %}

    ###############################################
    如何引入框架调节css内容：
    在 table 标签里面
    或者在 table_config 里面增加 attr标签 {'class':'xxxx'}
    ##############################################################################################
